//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SqlBuildManager.ServiceClient.Sbm.BuildService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BuildSettings", Namespace="http://schemas.datacontract.org/2004/07/SqlBuildManager.Services")]
    [System.SerializableAttribute()]
    public partial class BuildSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlternateLoggingDatabaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuildRequestFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTransactionalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTrialBuildField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalRootLoggingPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MultiDbTextConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SqlBuildManagerProjectContentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SqlBuildManagerProjectFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] TargetServersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeoutRetryCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlternateLoggingDatabase {
            get {
                return this.AlternateLoggingDatabaseField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternateLoggingDatabaseField, value) != true)) {
                    this.AlternateLoggingDatabaseField = value;
                    this.RaisePropertyChanged("AlternateLoggingDatabase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuildRequestFrom {
            get {
                return this.BuildRequestFromField;
            }
            set {
                if ((object.ReferenceEquals(this.BuildRequestFromField, value) != true)) {
                    this.BuildRequestFromField = value;
                    this.RaisePropertyChanged("BuildRequestFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTransactional {
            get {
                return this.IsTransactionalField;
            }
            set {
                if ((this.IsTransactionalField.Equals(value) != true)) {
                    this.IsTransactionalField = value;
                    this.RaisePropertyChanged("IsTransactional");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTrialBuild {
            get {
                return this.IsTrialBuildField;
            }
            set {
                if ((this.IsTrialBuildField.Equals(value) != true)) {
                    this.IsTrialBuildField = value;
                    this.RaisePropertyChanged("IsTrialBuild");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalRootLoggingPath {
            get {
                return this.LocalRootLoggingPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalRootLoggingPathField, value) != true)) {
                    this.LocalRootLoggingPathField = value;
                    this.RaisePropertyChanged("LocalRootLoggingPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] MultiDbTextConfig {
            get {
                return this.MultiDbTextConfigField;
            }
            set {
                if ((object.ReferenceEquals(this.MultiDbTextConfigField, value) != true)) {
                    this.MultiDbTextConfigField = value;
                    this.RaisePropertyChanged("MultiDbTextConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SqlBuildManagerProjectContents {
            get {
                return this.SqlBuildManagerProjectContentsField;
            }
            set {
                if ((object.ReferenceEquals(this.SqlBuildManagerProjectContentsField, value) != true)) {
                    this.SqlBuildManagerProjectContentsField = value;
                    this.RaisePropertyChanged("SqlBuildManagerProjectContents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SqlBuildManagerProjectFileName {
            get {
                return this.SqlBuildManagerProjectFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SqlBuildManagerProjectFileNameField, value) != true)) {
                    this.SqlBuildManagerProjectFileNameField = value;
                    this.RaisePropertyChanged("SqlBuildManagerProjectFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] TargetServers {
            get {
                return this.TargetServersField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetServersField, value) != true)) {
                    this.TargetServersField = value;
                    this.RaisePropertyChanged("TargetServers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeoutRetryCount {
            get {
                return this.TimeoutRetryCountField;
            }
            set {
                if ((this.TimeoutRetryCountField.Equals(value) != true)) {
                    this.TimeoutRetryCountField = value;
                    this.RaisePropertyChanged("TimeoutRetryCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectionTestSettings", Namespace="http://schemas.datacontract.org/2004/07/SqlBuildManager.Services")]
    [System.SerializableAttribute()]
    public partial class ConnectionTestSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string[]> TargetServersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string[]> TargetServers {
            get {
                return this.TargetServersField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetServersField, value) != true)) {
                    this.TargetServersField = value;
                    this.RaisePropertyChanged("TargetServers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceStatus", Namespace="http://schemas.datacontract.org/2004/07/SqlBuildManager.Services")]
    [System.SerializableAttribute()]
    public partial class ServiceStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SqlBuildManager.ServiceClient.Sbm.BuildService.ExecutionReturn ExecutionStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SqlBuildManager.ServiceClient.Sbm.BuildService.ServiceReadiness ReadinessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentVersion {
            get {
                return this.CurrentVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentVersionField, value) != true)) {
                    this.CurrentVersionField = value;
                    this.RaisePropertyChanged("CurrentVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SqlBuildManager.ServiceClient.Sbm.BuildService.ExecutionReturn ExecutionStatus {
            get {
                return this.ExecutionStatusField;
            }
            set {
                if ((this.ExecutionStatusField.Equals(value) != true)) {
                    this.ExecutionStatusField = value;
                    this.RaisePropertyChanged("ExecutionStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SqlBuildManager.ServiceClient.Sbm.BuildService.ServiceReadiness Readiness {
            get {
                return this.ReadinessField;
            }
            set {
                if ((this.ReadinessField.Equals(value) != true)) {
                    this.ReadinessField = value;
                    this.RaisePropertyChanged("Readiness");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExecutionReturn", Namespace="http://schemas.datacontract.org/2004/07/SqlBuildManager.Interfaces.Console")]
    public enum ExecutionReturn : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MissingOverrideFlag = -100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MissingBuildFlag = -101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidOverrideFlag = -102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NullBuildData = -103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NullMultiDbConfig = -104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidScriptSourceDirectory = -105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidBuildFileNameValue = -106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidTransactionAndTrialCombo = -107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MissingTargetDbOverrideSetting = -108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NegativeTimeoutRetryCount = -109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BadRetryCountAndTransactionalCombo = -110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BuildFileExtractionError = -200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoadProjectFileError = -201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RunInitializationError = -300,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessBuildError = -301,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnableToLoadBuildSettings = -600,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OneOrMoreRemoteServersHadError = -601,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnassignedDatabaseServers = -698,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Successful = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FinishingWithErrors = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Waiting = 5000,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Running = 6000,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckingConnections = 7000,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceReadiness", Namespace="http://schemas.datacontract.org/2004/07/SqlBuildManager.Services")]
    public enum ServiceReadiness : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToAccept = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackageAccepted = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackageValidationError = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Processing = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unreachable = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessingCompletedSuccessfully = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BuildRecord", Namespace="http://schemas.datacontract.org/2004/07/SqlBuildManager.Services.History")]
    [System.SerializableAttribute()]
    public partial class BuildRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string buildPackageNameField;
        
        private string requestedByField;
        
        private SqlBuildManager.ServiceClient.Sbm.BuildService.ExecutionReturn returnValueField;
        
        private string rootLogPathField;
        
        private System.DateTime submissionDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string buildPackageName {
            get {
                return this.buildPackageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.buildPackageNameField, value) != true)) {
                    this.buildPackageNameField = value;
                    this.RaisePropertyChanged("buildPackageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string requestedBy {
            get {
                return this.requestedByField;
            }
            set {
                if ((object.ReferenceEquals(this.requestedByField, value) != true)) {
                    this.requestedByField = value;
                    this.RaisePropertyChanged("requestedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public SqlBuildManager.ServiceClient.Sbm.BuildService.ExecutionReturn returnValue {
            get {
                return this.returnValueField;
            }
            set {
                if ((this.returnValueField.Equals(value) != true)) {
                    this.returnValueField = value;
                    this.RaisePropertyChanged("returnValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string rootLogPath {
            get {
                return this.rootLogPathField;
            }
            set {
                if ((object.ReferenceEquals(this.rootLogPathField, value) != true)) {
                    this.rootLogPathField = value;
                    this.RaisePropertyChanged("rootLogPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime submissionDate {
            get {
                return this.submissionDateField;
            }
            set {
                if ((this.submissionDateField.Equals(value) != true)) {
                    this.submissionDateField = value;
                    this.RaisePropertyChanged("submissionDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService", ConfigurationName="Sbm.BuildService.IBuildService")]
    public interface IBuildService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "SubmitBuildPackage", ReplyAction="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "SubmitBuildPackageResponse")]
        bool SubmitBuildPackage(SqlBuildManager.ServiceClient.Sbm.BuildService.BuildSettings settings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "TestDatabaseConnectivity", ReplyAction="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "TestDatabaseConnectivityResponse")]
        SqlSync.Connection.ConnectionTestResult[] TestDatabaseConnectivity(SqlBuildManager.ServiceClient.Sbm.BuildService.ConnectionTestSettings settings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetServiceStatus", ReplyAction="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetServiceStatusResponse")]
        SqlBuildManager.ServiceClient.Sbm.BuildService.ServiceStatus GetServiceStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetLastExecutionCommitsLog", ReplyAction="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetLastExecutionCommitsLogResponse")]
        string GetLastExecutionCommitsLog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetLastExecutionErrorsLog", ReplyAction="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetLastExecutionErrorsLogResponse")]
        string GetLastExecutionErrorsLog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetServiceLogFile", ReplyAction="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetServiceLogFileResponse")]
        string GetServiceLogFile();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetDetailedDatabaseExecutionLog", ReplyAction="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetDetailedDatabaseExecutionLogResponse")]
        string GetDetailedDatabaseExecutionLog(string serverAndDatabase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetServiceVersion", ReplyAction="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetServiceVersionResponse")]
        string GetServiceVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetServiceBuildHistory", ReplyAction="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetServiceBuildHistoryResponse")]
        SqlBuildManager.ServiceClient.Sbm.BuildService.BuildRecord[] GetServiceBuildHistory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetSpecificCommitsLog", ReplyAction="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetSpecificCommitsLogResponse")]
        string GetSpecificCommitsLog(System.DateTime submittedDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetSpecificErrorsLog", ReplyAction="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetSpecificErrorsLogResponse")]
        string GetSpecificErrorsLog(System.DateTime submittedDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetSpecificDatabaseExecutionLog", ReplyAction="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetSpecificDatabaseExecutionLogResponse")]
        string GetSpecificDatabaseExecutionLog(System.DateTime submittedDate, string serverAndDatabase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetAllErrorLogsForExecution", ReplyAction="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetAllErrorLogsForExecutionResponse")]
        byte[] GetAllErrorLogsForExecution(System.DateTime submittedDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetLastFailuresDatabaseConfig", ReplyAction="http://schemas.mckechney.com/SqlBuildManager.Services/BuildService/IBuildService/" +
            "GetLastFailuresDatabaseConfigResponse")]
        string GetLastFailuresDatabaseConfig();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBuildServiceChannel : SqlBuildManager.ServiceClient.Sbm.BuildService.IBuildService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BuildServiceClient : System.ServiceModel.ClientBase<SqlBuildManager.ServiceClient.Sbm.BuildService.IBuildService>, SqlBuildManager.ServiceClient.Sbm.BuildService.IBuildService {
        
        public BuildServiceClient() {
        }
        
        public BuildServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BuildServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BuildServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BuildServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SubmitBuildPackage(SqlBuildManager.ServiceClient.Sbm.BuildService.BuildSettings settings) {
            return base.Channel.SubmitBuildPackage(settings);
        }
        
        public SqlSync.Connection.ConnectionTestResult[] TestDatabaseConnectivity(SqlBuildManager.ServiceClient.Sbm.BuildService.ConnectionTestSettings settings) {
            return base.Channel.TestDatabaseConnectivity(settings);
        }
        
        public SqlBuildManager.ServiceClient.Sbm.BuildService.ServiceStatus GetServiceStatus() {
            return base.Channel.GetServiceStatus();
        }
        
        public string GetLastExecutionCommitsLog() {
            return base.Channel.GetLastExecutionCommitsLog();
        }
        
        public string GetLastExecutionErrorsLog() {
            return base.Channel.GetLastExecutionErrorsLog();
        }
        
        public string GetServiceLogFile() {
            return base.Channel.GetServiceLogFile();
        }
        
        public string GetDetailedDatabaseExecutionLog(string serverAndDatabase) {
            return base.Channel.GetDetailedDatabaseExecutionLog(serverAndDatabase);
        }
        
        public string GetServiceVersion() {
            return base.Channel.GetServiceVersion();
        }
        
        public SqlBuildManager.ServiceClient.Sbm.BuildService.BuildRecord[] GetServiceBuildHistory() {
            return base.Channel.GetServiceBuildHistory();
        }
        
        public string GetSpecificCommitsLog(System.DateTime submittedDate) {
            return base.Channel.GetSpecificCommitsLog(submittedDate);
        }
        
        public string GetSpecificErrorsLog(System.DateTime submittedDate) {
            return base.Channel.GetSpecificErrorsLog(submittedDate);
        }
        
        public string GetSpecificDatabaseExecutionLog(System.DateTime submittedDate, string serverAndDatabase) {
            return base.Channel.GetSpecificDatabaseExecutionLog(submittedDate, serverAndDatabase);
        }
        
        public byte[] GetAllErrorLogsForExecution(System.DateTime submittedDate) {
            return base.Channel.GetAllErrorLogsForExecution(submittedDate);
        }
        
        public string GetLastFailuresDatabaseConfig() {
            return base.Channel.GetLastFailuresDatabaseConfig();
        }
    }
}
