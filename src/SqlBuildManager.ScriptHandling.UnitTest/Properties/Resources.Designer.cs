//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SqlBuildManager.ScriptHandling.UnitTest.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SqlBuildManager.ScriptHandling.UnitTest.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE PROCEDURE [dbo].[uspGetBillOfMaterials]
        ///	    @StartProductID [int],
        ///	    @CheckDate [datetime]
        ///	AS
        ///BEGIN
        ///		/********************************************************
        ///		*Looks for tags found in a comment header
        ///		*CR# 1234546
        ///		*this is another tag CR234567
        ///		*but this is the one it should find CR-987654
        ///		*no, really this is the one it should find P-23533
        ///		*********************************************************/
        ///	    SET NOCOUNT ON;
        ///	
        ///	    -- Use recursive query to generate a multi-le [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LastTagFromMixedContents {
            get {
                return ResourceManager.GetString("LastTagFromMixedContents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET ANSI_NULLS ON
        ///SET QUOTED_IDENTIFIER ON
        ///IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[dbo].[proc_MyTable_Preferences_Get]&apos;) AND type in (N&apos;P&apos;, N&apos;PC&apos;))
        ///BEGIN
        ///       EXEC dbo.sp_executesql @statement = N&apos;
        ///       CREATE PROCEDURE [dbo].[proc_MyTable_Preferences_Get]
        ///              @CustomerID          int
        ///              ,@UserID             int
        ///       AS
        ///       
        ///       
        ///       SELECT 
        ///              p.DepartmentPageSize
        ///              , p.ColorBackgroundTable
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NoLockBugFix1_Expected {
            get {
                return ResourceManager.GetString("NoLockBugFix1_Expected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SET ANSI_NULLS ON
        ///SET QUOTED_IDENTIFIER ON
        ///IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;[dbo].[proc_MyTable_Preferences_Get]&apos;) AND type in (N&apos;P&apos;, N&apos;PC&apos;))
        ///BEGIN
        ///       EXEC dbo.sp_executesql @statement = N&apos;
        ///       CREATE PROCEDURE [dbo].[proc_MyTable_Preferences_Get]
        ///              @CustomerID          int
        ///              ,@UserID             int
        ///       AS
        ///       
        ///       
        ///       SELECT 
        ///              p.DepartmentPageSize
        ///              , p.ColorBackgroundTable
        ///             [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NoLockBugFix1_Input {
            get {
                return ResourceManager.GetString("NoLockBugFix1_Input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE PROCEDURE [dbo].[uspGetBillOfMaterials]
        ///	    @StartProductID [int],
        ///	    @CheckDate [datetime]
        ///	AS
        ///BEGIN
        ///		/********************************************************
        ///		*Looks for tags found in a comment header
        ///		*CR# 1234546
        ///		*this is another tag CR234567
        ///		*but this is the one it should find CR-987654
        ///		*********************************************************/
        ///	    SET NOCOUNT ON;
        ///	
        ///	    -- Use recursive query to generate a multi-level Bill of Material (i.e. all level 1 
        ///	    -- compo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TagFromContents {
            get {
                return ResourceManager.GetString("TagFromContents", resourceCulture);
            }
        }
    }
}
